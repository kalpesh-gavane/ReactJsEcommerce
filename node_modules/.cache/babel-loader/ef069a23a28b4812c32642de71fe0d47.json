{"ast":null,"code":"import { ADD_TO_CART } from \"../../constants\";\nconst initialState = {\n  cardData: [],\n  totalAmount: 0,\n  totalItems: 0\n};\nexport default function cardItems() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      console.log(action.data); // console.log(state);\n\n      if (state.length > 0) {\n        // console.log(state);\n        let updatedCart = state.map(curElem => {\n          console.log(curElem);\n\n          if (curElem.product_id === action.data.product_id) {\n            console.log('matched');\n            return { ...curElem,\n              quantity: curElem.quantity + 1\n            };\n          }\n\n          return curElem;\n        });\n        return { ...state,\n          cardData: updatedCart\n        }; // return [\n        //   ...state,\n        //   { cardData: action.data }\n        // ]\n      } else {\n        return [...state, {\n          cardData: action.data\n        }];\n      } //   let updatedCart = state.data.map((curElem) => {\n      //     if (curElem.product_id === action.payload) {\n      //         if (curElem.quantity < curElem.max_qty)\n      //             return {\n      //                 ...curElem, quantity: curElem.quantity + 1\n      //             };\n      //     }\n      //     return curElem;\n      // });\n\n\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/Services/Reducers/reducer.js"],"names":["ADD_TO_CART","initialState","cardData","totalAmount","totalItems","cardItems","state","action","type","console","log","data","length","updatedCart","map","curElem","product_id","quantity"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB,EADF,CAEE;;AAEA,UAAIL,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsB;AACrB;AACC,YAAIC,WAAW,GAAGP,KAAK,CAACQ,GAAN,CAAWC,OAAD,IAAa;AAEvCN,UAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;;AACA,cAAIA,OAAO,CAACC,UAAR,KAAuBT,MAAM,CAACI,IAAP,CAAYK,UAAvC,EAAmD;AACjDP,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,mBAAO,EACL,GAAGK,OADE;AACOE,cAAAA,QAAQ,EAAEF,OAAO,CAACE,QAAR,GAAmB;AADpC,aAAP;AAGD;;AAED,iBAAOF,OAAP;AACD,SAXiB,CAAlB;AAaA,eAAO,EACL,GAAGT,KADE;AAELJ,UAAAA,QAAQ,EAAEW;AAFL,SAAP,CAfoB,CAoBpB;AACA;AACA;AACA;AACD,OAxBD,MAwBO;AACL,eAAO,CACL,GAAGP,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACI;AAAnB,SAFK,CAAP;AAID,OAjCH,CAoCE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEF;AACE,aAAOL,KAAP;AAlDJ;AAoDD","sourcesContent":["import { ADD_TO_CART } from \"../../constants\"\r\nconst initialState = {\r\n  cardData: [],\r\n  totalAmount: 0,\r\n  totalItems: 0,\r\n};\r\n\r\nexport default function cardItems(state = [], action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      console.log(action.data);\r\n      // console.log(state);\r\n\r\n      if (state.length > 0) {\r\n       // console.log(state);\r\n        let updatedCart = state.map((curElem) => {\r\n\r\n          console.log(curElem);\r\n          if (curElem.product_id === action.data.product_id) {\r\n            console.log('matched');\r\n            return {\r\n              ...curElem, quantity: curElem.quantity + 1\r\n            };\r\n          }\r\n\r\n          return curElem;\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          cardData: updatedCart \r\n        }\r\n\r\n        // return [\r\n        //   ...state,\r\n        //   { cardData: action.data }\r\n        // ]\r\n      } else {\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n      }\r\n\r\n\r\n      //   let updatedCart = state.data.map((curElem) => {\r\n\r\n      //     if (curElem.product_id === action.payload) {\r\n      //         if (curElem.quantity < curElem.max_qty)\r\n      //             return {\r\n      //                 ...curElem, quantity: curElem.quantity + 1\r\n      //             };\r\n      //     }\r\n      //     return curElem;\r\n      // });\r\n      break;\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}