{"ast":null,"code":"import React from \"react\";\n\nfunction showToast(type, curItem) {\n  const serializedState = localStorage.getItem('state');\n  const statedata = JSON.parse(serializedState);\n\n  if (statedata.cartItems.length >= 0) {\n    if (type == 'remove') {\n      setCount(count => {\n        const newState = { ...count\n        }; //keep state immutable\n\n        !newState[curItem.product_id] && (newState[curItem.product_id] = 0);\n        newState[curItem.product_id] = 0;\n        return newState;\n      });\n      const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\n\n      if (theItem) {\n        toast.error('Item Removed');\n      }\n    }\n  }\n}\n\nexport default showToast;","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/functions/ShowToast.js"],"names":["React","showToast","type","curItem","serializedState","localStorage","getItem","statedata","JSON","parse","cartItems","length","setCount","count","newState","product_id","theItem","find","product","toast","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAiC;AAE7B,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAlB;;AAEA,MAAIG,SAAS,CAACG,SAAV,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACjC,QAAGT,IAAI,IAAI,QAAX,EAAqB;AAEjBU,MAAAA,QAAQ,CAACC,KAAK,IAAI;AACd,cAAMC,QAAQ,GAAG,EAAE,GAAGD;AAAL,SAAjB,CADc,CACgB;;AAC9B,SAACC,QAAQ,CAACX,OAAO,CAACY,UAAT,CAAT,KAAkCD,QAAQ,CAACX,OAAO,CAACY,UAAT,CAAR,GAA+B,CAAjE;AACAD,QAAAA,QAAQ,CAACX,OAAO,CAACY,UAAT,CAAR,GAA+B,CAA/B;AACA,eAAOD,QAAP;AACH,OALO,CAAR;AAOA,YAAME,OAAO,GAAGT,SAAS,CAACG,SAAV,CAAoBO,IAApB,CAAyBC,OAAO,IAAIA,OAAO,CAACH,UAAR,KAAuBZ,OAAO,CAACY,UAAnE,CAAhB;;AACA,UAAIC,OAAJ,EAAa;AACTG,QAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ;AACH;AACJ;AACJ;AACJ;;AAED,eAAenB,SAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction showToast(type, curItem){\r\n\r\n    const serializedState = localStorage.getItem('state');\r\n    const statedata = JSON.parse(serializedState);\r\n    \r\n    if (statedata.cartItems.length >= 0) {\r\n        if(type == 'remove') {\r\n\r\n            setCount(count => {\r\n                const newState = { ...count } //keep state immutable\r\n                !newState[curItem.product_id] && (newState[curItem.product_id] = 0)\r\n                newState[curItem.product_id] = 0\r\n                return newState\r\n            });\r\n\r\n            const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\r\n            if (theItem) {\r\n                toast.error('Item Removed');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default showToast;"]},"metadata":{},"sourceType":"module"}