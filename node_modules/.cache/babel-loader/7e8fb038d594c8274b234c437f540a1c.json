{"ast":null,"code":"import { ADD_TO_CART } from \"../../constants\";\nconst initialState = {\n  cardData: [],\n  totalAmount: 0,\n  totalItems: 0\n};\nexport default function cardItems() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      // console.log(action.data);\n      // console.log(state);\n      if (state.length > 0) {\n        state.map(curElem => {\n          console.log('inside state');\n          let curdata = curElem.cardData;\n\n          if (curdata.product_id === action.data.product_id) {\n            console.log('matched');\n            return { ...curdata,\n              quantity: curdata.quantity + 1\n            };\n          }\n\n          return curdata;\n        }); // const item = state.find((curElem) => curElem.product_id === action.product_id);\n        // if (item) {\n        //   item.quantity += 1;\n        // } else {\n        //   state.push(action.data);\n        // }\n        // const basket = createSlice({\n        //   name: \"basket\",\n        //   initialState,\n        //   reducers: {\n        //     addToBasket: (state, { payload }) => {\n        //       const item = state.items.find((pizza) => pizza.name === payload.name);\n        //       if (item) {\n        //         item.quantity += payload.quantity;\n        //       } else {\n        //         state.items.push(payload);\n        //       }\n        //     },\n        //   },\n        // });\n\n        return [...state, {\n          cardData: action.data\n        }];\n      } else {\n        return [...state, {\n          cardData: action.data\n        }];\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/Services/Reducers/reducer.js"],"names":["ADD_TO_CART","initialState","cardData","totalAmount","totalItems","cardItems","state","action","type","length","map","curElem","console","log","curdata","product_id","data","quantity"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE;AACA;AAEA,UAAIM,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAEpBH,QAAAA,KAAK,CAACI,GAAN,CAAWC,OAAD,IAAa;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,cAAIC,OAAO,GAAGH,OAAO,CAACT,QAAtB;;AACA,cAAIY,OAAO,CAACC,UAAR,KAAuBR,MAAM,CAACS,IAAP,CAAYD,UAAvC,EAAmD;AACjDH,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,mBAAO,EACL,GAAGC,OADE;AACOG,cAAAA,QAAQ,EAAEH,OAAO,CAACG,QAAR,GAAmB;AADpC,aAAP;AAGD;;AACD,iBAAOH,OAAP;AACD,SAVD,EAFoB,CAapB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAO,CACL,GAAGR,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACS;AAAnB,SAFK,CAAP;AAID,OAxCD,MAwCO;AACL,eAAO,CACL,GAAGV,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACS;AAAnB,SAFK,CAAP;AAID;;AACD;;AAEF;AACE,aAAOV,KAAP;AAtDJ;AAwDD","sourcesContent":["import { ADD_TO_CART } from \"../../constants\"\r\nconst initialState = {\r\n  cardData: [],\r\n  totalAmount: 0,\r\n  totalItems: 0,\r\n};\r\n\r\nexport default function cardItems(state = [], action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      // console.log(action.data);\r\n      // console.log(state);\r\n\r\n      if (state.length > 0) {\r\n         \r\n        state.map((curElem) => {\r\n          console.log('inside state');\r\n          let curdata = curElem.cardData;\r\n          if (curdata.product_id === action.data.product_id) {\r\n            console.log('matched');\r\n            return {\r\n              ...curdata, quantity: curdata.quantity + 1\r\n            };\r\n          }\r\n          return curdata;\r\n        });\r\n        // const item = state.find((curElem) => curElem.product_id === action.product_id);\r\n\r\n        // if (item) {\r\n        //   item.quantity += 1;\r\n        // } else {\r\n        //   state.push(action.data);\r\n        // }\r\n        \r\n        // const basket = createSlice({\r\n        //   name: \"basket\",\r\n        //   initialState,\r\n        //   reducers: {\r\n        //     addToBasket: (state, { payload }) => {\r\n        //       const item = state.items.find((pizza) => pizza.name === payload.name);\r\n\r\n        //       if (item) {\r\n        //         item.quantity += payload.quantity;\r\n        //       } else {\r\n        //         state.items.push(payload);\r\n        //       }\r\n        //     },\r\n        //   },\r\n        // });\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n      } else {\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}