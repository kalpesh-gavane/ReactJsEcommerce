{"ast":null,"code":"import { ADD_TO_CART } from \"../../constants\";\nconst initialState = {\n  cardData: [],\n  totalAmount: 0,\n  totalItems: 0\n};\nexport default function cardItems() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      console.log(action.data.product_id);\n      console.log(state.length);\n\n      if (state.length > 0) {\n        state.data.map(curElem => {\n          if (action.data.product_id === curElem.product_id) {\n            console.log(curElem);\n          } else {\n            return [...state, {\n              cardData: action.data\n            }];\n          }\n        });\n      } else {\n        return [...state, {\n          cardData: action.data\n        }];\n      } //   let updatedCart = state.data.map((curElem) => {\n      //     if (curElem.product_id === action.payload) {\n      //         if (curElem.quantity < curElem.max_qty)\n      //             return {\n      //                 ...curElem, quantity: curElem.quantity + 1\n      //             };\n      //     }\n      //     return curElem;\n      // });\n\n\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/Services/Reducers/reducer.js"],"names":["ADD_TO_CART","initialState","cardData","totalAmount","totalItems","cardItems","state","action","type","console","log","data","product_id","length","map","curElem"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAP,CAAYC,UAAxB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACO,MAAlB;;AAEA,UAAIP,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AACpBP,QAAAA,KAAK,CAACK,IAAN,CAAWG,GAAX,CAAgBC,OAAD,IAAa;AAC1B,cAAIR,MAAM,CAACI,IAAP,CAAYC,UAAZ,KAA2BG,OAAO,CAACH,UAAvC,EAAmD;AACjDH,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACD,WAFD,MAEO;AACL,mBAAO,CACL,GAAGT,KADE,EAEL;AAAEJ,cAAAA,QAAQ,EAAEK,MAAM,CAACI;AAAnB,aAFK,CAAP;AAID;AACF,SATD;AAUD,OAXD,MAWO;AACL,eAAO,CACL,GAAGL,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACI;AAAnB,SAFK,CAAP;AAID,OApBH,CAuBE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEF;AACE,aAAOL,KAAP;AArCJ;AAuCD","sourcesContent":["import { ADD_TO_CART } from \"../../constants\"\r\nconst initialState = {\r\n  cardData: [],\r\n  totalAmount: 0,\r\n  totalItems: 0,\r\n};\r\n\r\nexport default function cardItems(state = [], action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      console.log(action.data.product_id);\r\n      console.log(state.length);\r\n\r\n      if (state.length > 0) {\r\n        state.data.map((curElem) => {\r\n          if (action.data.product_id === curElem.product_id) {\r\n            console.log(curElem);\r\n          } else {\r\n            return [\r\n              ...state,\r\n              { cardData: action.data }\r\n            ]\r\n          }\r\n        });\r\n      } else {\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n      }\r\n\r\n\r\n      //   let updatedCart = state.data.map((curElem) => {\r\n\r\n      //     if (curElem.product_id === action.payload) {\r\n      //         if (curElem.quantity < curElem.max_qty)\r\n      //             return {\r\n      //                 ...curElem, quantity: curElem.quantity + 1\r\n      //             };\r\n      //     }\r\n      //     return curElem;\r\n      // });\r\n      break;\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}