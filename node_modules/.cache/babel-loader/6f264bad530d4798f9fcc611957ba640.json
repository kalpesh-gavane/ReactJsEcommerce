{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { CartContext } from '../App.js';\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(props) {\n  _s();\n\n  // console.log(props);\n  const serializedState = localStorage.getItem('state');\n  const statedata = JSON.parse(serializedState);\n  const counterState = localStorage.getItem('counter');\n  const counterdata = JSON.parse(counterState);\n  const [count, setCount] = useState(counterdata); // const product_count = JSON.stringify(count);\n  // localStorage.setItem('counter', product_count);\n\n  if (props.data.cartItems.length >= 0) {\n    try {\n      //  console.log(props.data);\n      if (props.data.cartItems.length == 0) {\n        // console.log('0');\n        const serializedState = JSON.stringify(props.data);\n        localStorage.setItem('state', serializedState);\n      } else {\n        const serializedState = JSON.stringify(props.data);\n        localStorage.setItem('state', serializedState);\n      }\n    } catch (e) {// Ignore write errors;\n    }\n  }\n\n  const showToast = (type, curItem) => {\n    // console.log(type);\n    if (statedata.cartItems.length >= 0) {\n      if (type == 'add') {\n        if (statedata.cartItems.length == 0 || statedata.cartItems.length > 0) {\n          toast.success('Item Added');\n        }\n      } else if (type == 'remove') {\n        setCount(count => {\n          const newState = { ...count\n          }; //keep state immutable\n\n          !newState[curItem.product_id] && (newState[curItem.product_id] = 0);\n          newState[curItem.product_id] = 0;\n          console.log(newState);\n          return newState;\n        });\n        const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\n\n        if (theItem) {\n          toast.error('Item Removed');\n        }\n      } else {\n        const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\n\n        if (theItem) {\n          toast.error('Item Removed');\n        }\n      }\n    }\n  };\n\n  console.log(count); // const product_count = JSON.stringify(count);\n  // localStorage.setItem('counter', product_count);\n  // const product_count = JSON.stringify(count);\n  // localStorage.setItem('counter', product_count);\n  // console.log(statedata.totalItems);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Cart, \"EUStwfBmYhyXAyC30Aa25L+13s4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/components/Cart.js"],"names":["CartContext","React","useState","ToastContainer","toast","Link","Cart","props","serializedState","localStorage","getItem","statedata","JSON","parse","counterState","counterdata","count","setCount","data","cartItems","length","stringify","setItem","e","showToast","type","curItem","success","newState","product_id","console","log","theItem","find","product","error"],"mappings":"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","sourcesContent":["import { CartContext } from '../App.js';\r\nimport React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cart(props) {\r\n  // console.log(props);\r\n\r\n  const serializedState = localStorage.getItem('state');\r\n  const statedata = JSON.parse(serializedState);\r\n\r\n  const counterState = localStorage.getItem('counter');\r\n  const counterdata = JSON.parse(counterState);\r\n\r\n  const [count, setCount] = useState(counterdata);\r\n\r\n  \r\n  // const product_count = JSON.stringify(count);\r\n  // localStorage.setItem('counter', product_count);\r\n\r\n  if (props.data.cartItems.length >= 0) {\r\n\r\n    try {\r\n      //  console.log(props.data);\r\n      if (props.data.cartItems.length == 0) {\r\n        // console.log('0');\r\n        const serializedState = JSON.stringify(props.data);\r\n        localStorage.setItem('state', serializedState);\r\n      } else {\r\n        const serializedState = JSON.stringify(props.data);\r\n        localStorage.setItem('state', serializedState);\r\n      }\r\n\r\n    } catch (e) {\r\n      // Ignore write errors;\r\n    }\r\n\r\n  }\r\n\r\n  const showToast = (type, curItem) => {\r\n    // console.log(type);\r\n    if (statedata.cartItems.length >= 0) {\r\n      if (type == 'add') {\r\n        if (statedata.cartItems.length == 0 || statedata.cartItems.length > 0) {\r\n          toast.success('Item Added');\r\n        }\r\n      } else if (type == 'remove') {\r\n\r\n        setCount(count => {\r\n\r\n          const newState = { ...count } //keep state immutable\r\n          !newState[curItem.product_id] && (newState[curItem.product_id] = 0)\r\n          newState[curItem.product_id] = 0\r\n\r\n          console.log(newState);\r\n\r\n\r\n           return newState\r\n        });\r\n\r\n        const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\r\n        if (theItem) {\r\n\r\n          toast.error('Item Removed');\r\n        }\r\n\r\n\r\n\r\n      } else {\r\n        const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\r\n        if (theItem) {\r\n          toast.error('Item Removed');\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  };\r\n\r\nconsole.log(count);\r\n  // const product_count = JSON.stringify(count);\r\n  // localStorage.setItem('counter', product_count);\r\n\r\n  // const product_count = JSON.stringify(count);\r\n  // localStorage.setItem('counter', product_count);\r\n  // console.log(statedata.totalItems);\r\n\r\n  return (\r\n<></>\r\n  )\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}