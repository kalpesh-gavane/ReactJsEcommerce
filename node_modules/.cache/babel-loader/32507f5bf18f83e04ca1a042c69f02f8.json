{"ast":null,"code":"import React, { useState } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction ShowToast(type, curItem) {\n  const serializedState = localStorage.getItem('state');\n  const statedata = JSON.parse(serializedState);\n  const counterState = localStorage.getItem('counter');\n  const counterdata = JSON.parse(counterState);\n\n  if (statedata.cartItems.length >= 0) {\n    if (type == 'add') {\n      if (props.data.cartItems.length == 0 || props.data.cartItems.length > 0) {\n        toast.success('Item Added');\n      }\n    } else if (type == 'remove') {\n      setCount(count => {\n        const newState = { ...count\n        }; //keep state immutable\n\n        !newState[curItem.product_id] && (newState[curItem.product_id] = 0);\n        newState[curItem.product_id] = 0;\n        return newState;\n      });\n      const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\n\n      if (theItem) {\n        toast.error('Item Removed');\n      }\n    } else {\n      const theItem = props.data.cartItems.find(product => product.product_id === curItem.product_id);\n\n      if (theItem) {\n        toast.error('Item Removed');\n      }\n    }\n  }\n\n  const product_count = JSON.stringify(count);\n  localStorage.setItem('counter', product_count);\n}\n\n_c = ShowToast;\nexport default ShowToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowToast\");","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/functions/ShowToast.js"],"names":["React","useState","ToastContainer","toast","ShowToast","type","curItem","serializedState","localStorage","getItem","statedata","JSON","parse","counterState","counterdata","cartItems","length","props","data","success","setCount","count","newState","product_id","theItem","find","product","error","product_count","stringify","setItem"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAiC;AAE7B,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAlB;AAEA,QAAMM,YAAY,GAAGL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAArB;AACA,QAAMK,WAAW,GAAGH,IAAI,CAACC,KAAL,CAAWC,YAAX,CAApB;;AAGA,MAAIH,SAAS,CAACK,SAAV,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACjC,QAAIX,IAAI,IAAI,KAAZ,EAAmB;AACT,UAAIY,KAAK,CAACC,IAAN,CAAWH,SAAX,CAAqBC,MAArB,IAA+B,CAA/B,IAAoCC,KAAK,CAACC,IAAN,CAAWH,SAAX,CAAqBC,MAArB,GAA8B,CAAtE,EAAyE;AACvEb,QAAAA,KAAK,CAACgB,OAAN,CAAc,YAAd;AACD;AACT,KAJF,MAIQ,IAAGd,IAAI,IAAI,QAAX,EAAqB;AACzBe,MAAAA,QAAQ,CAACC,KAAK,IAAI;AACd,cAAMC,QAAQ,GAAG,EAAE,GAAGD;AAAL,SAAjB,CADc,CACgB;;AAC9B,SAACC,QAAQ,CAAChB,OAAO,CAACiB,UAAT,CAAT,KAAkCD,QAAQ,CAAChB,OAAO,CAACiB,UAAT,CAAR,GAA+B,CAAjE;AACAD,QAAAA,QAAQ,CAAChB,OAAO,CAACiB,UAAT,CAAR,GAA+B,CAA/B;AACA,eAAOD,QAAP;AACH,OALO,CAAR;AAOA,YAAME,OAAO,GAAGd,SAAS,CAACK,SAAV,CAAoBU,IAApB,CAAyBC,OAAO,IAAIA,OAAO,CAACH,UAAR,KAAuBjB,OAAO,CAACiB,UAAnE,CAAhB;;AACA,UAAIC,OAAJ,EAAa;AACTrB,QAAAA,KAAK,CAACwB,KAAN,CAAY,cAAZ;AACH;AACJ,KAZO,MAYF;AACF,YAAMH,OAAO,GAAGP,KAAK,CAACC,IAAN,CAAWH,SAAX,CAAqBU,IAArB,CAA0BC,OAAO,IAAIA,OAAO,CAACH,UAAR,KAAuBjB,OAAO,CAACiB,UAApE,CAAhB;;AACA,UAAIC,OAAJ,EAAa;AACXrB,QAAAA,KAAK,CAACwB,KAAN,CAAY,cAAZ;AACD;AACF;AACN;;AAED,QAAMC,aAAa,GAAGjB,IAAI,CAACkB,SAAL,CAAeR,KAAf,CAAtB;AACAb,EAAAA,YAAY,CAACsB,OAAb,CAAqB,SAArB,EAAgCF,aAAhC;AACH;;KApCQxB,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nfunction ShowToast(type, curItem){\r\n\r\n    const serializedState = localStorage.getItem('state');\r\n    const statedata = JSON.parse(serializedState);\r\n\r\n    const counterState = localStorage.getItem('counter');\r\n    const counterdata = JSON.parse(counterState);\r\n\r\n\r\n    if (statedata.cartItems.length >= 0) {\r\n        if (type == 'add') {\r\n                  if (props.data.cartItems.length == 0 || props.data.cartItems.length > 0) {\r\n                    toast.success('Item Added');\r\n                  }\r\n         } else if(type == 'remove') {\r\n            setCount(count => {\r\n                const newState = { ...count } //keep state immutable\r\n                !newState[curItem.product_id] && (newState[curItem.product_id] = 0)\r\n                newState[curItem.product_id] = 0\r\n                return newState\r\n            });\r\n\r\n            const theItem = statedata.cartItems.find(product => product.product_id === curItem.product_id);\r\n            if (theItem) {\r\n                toast.error('Item Removed');\r\n            }\r\n        }else {\r\n            const theItem = props.data.cartItems.find(product => product.product_id === curItem.product_id);\r\n            if (theItem) {\r\n              toast.error('Item Removed');\r\n            }\r\n          }\r\n    }\r\n    \r\n    const product_count = JSON.stringify(count);\r\n    localStorage.setItem('counter', product_count);\r\n}\r\n\r\nexport default ShowToast;"]},"metadata":{},"sourceType":"module"}