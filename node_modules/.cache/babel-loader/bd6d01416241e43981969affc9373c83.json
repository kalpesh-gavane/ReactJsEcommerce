{"ast":null,"code":"import { ADD_TO_CART } from \"../../constants\";\nconst initialState = {\n  cardData: [],\n  totalAmount: 0,\n  totalItems: 0\n};\nexport default function cardItems() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      // console.log(action.data);\n      // console.log(state);\n      if (state.length > 0) {\n        console.log('inside state');\n        state.map(curElem => {\n          console.log(curElem.cardData.product_id);\n\n          if (curElem.cardData.product_id === action.data.product_id) {\n            console.log('matched');\n            let curdata = curElem.cardData;\n            console.log(); //  const item = state.find((curdata) => curdata.product_id === action.data.product_id);\n            //   if (item) {\n            //     item.quantity += 1;\n            //   } else {\n            //     state.push(action.data);\n            //   }\n          }\n        }); // let updatedCart = state.map((curElem) => {\n        //   console.log(curElem);\n        //   if (curElem.cardData.product_id === action.data.product_id) {\n        //     console.log('matched');\n        //     return {\n        //       ...curElem, quantity: curElem.quantity + 1\n        //     };\n        //   }\n        //   return curElem;\n        // });\n        // const item = state.find((curElem) => curElem.product_id === action.product_id);\n        // if (item) {\n        //   item.quantity += 1;\n        // } else {\n        //   state.push(action.data);\n        // }\n\n        return [...state, {\n          cardData: action.data\n        }]; // const basket = createSlice({\n        //   name: \"basket\",\n        //   initialState,\n        //   reducers: {\n        //     addToBasket: (state, { payload }) => {\n        //       const item = state.items.find((pizza) => pizza.name === payload.name);\n        //       if (item) {\n        //         item.quantity += payload.quantity;\n        //       } else {\n        //         state.items.push(payload);\n        //       }\n        //     },\n        //   },\n        // });\n      } else {\n        return [...state, {\n          cardData: action.data\n        }];\n      } //   let updatedCart = state.data.map((curElem) => {\n      //     if (curElem.product_id === action.payload) {\n      //         if (curElem.quantity < curElem.max_qty)\n      //             return {\n      //                 ...curElem, quantity: curElem.quantity + 1\n      //             };\n      //     }\n      //     return curElem;\n      // });\n\n\n      break;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/xampp/htdocs/ReactJsEcommerce/src/Services/Reducers/reducer.js"],"names":["ADD_TO_CART","initialState","cardData","totalAmount","totalItems","cardItems","state","action","type","length","console","log","map","curElem","product_id","data","curdata"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE;AACA;AAEA,UAAIM,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAL,QAAAA,KAAK,CAACM,GAAN,CAAWC,OAAD,IAAa;AACrBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACX,QAAR,CAAiBY,UAA7B;;AACA,cAAID,OAAO,CAACX,QAAR,CAAiBY,UAAjB,KAAgCP,MAAM,CAACQ,IAAP,CAAYD,UAAhD,EAA4D;AAE1DJ,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEF,gBAAIK,OAAO,GAAGH,OAAO,CAACX,QAAtB;AAEAQ,YAAAA,OAAO,CAACC,GAAR,GAN4D,CAQ5D;AAEA;AACA;AACA;AACA;AACA;AACC;AACF,SAlBD,EAHoB,CAsBpB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAO,CACL,GAAGL,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACQ;AAAnB,SAFK,CAAP,CA3CoB,CAkDpB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAjED,MAiEO;AACL,eAAO,CACL,GAAGT,KADE,EAEL;AAAEJ,UAAAA,QAAQ,EAAEK,MAAM,CAACQ;AAAnB,SAFK,CAAP;AAID,OA1EH,CA6EE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEF;AACE,aAAOT,KAAP;AA3FJ;AA6FD","sourcesContent":["import { ADD_TO_CART } from \"../../constants\"\r\nconst initialState = {\r\n  cardData: [],\r\n  totalAmount: 0,\r\n  totalItems: 0,\r\n};\r\n\r\nexport default function cardItems(state = [], action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      // console.log(action.data);\r\n      // console.log(state);\r\n\r\n      if (state.length > 0) {\r\n        console.log('inside state');\r\n\r\n        state.map((curElem) => {\r\n          console.log(curElem.cardData.product_id);\r\n          if (curElem.cardData.product_id === action.data.product_id) {\r\n\r\n            console.log('matched');\r\n\r\n          let curdata = curElem.cardData;\r\n\r\n          console.log();\r\n\r\n          //  const item = state.find((curdata) => curdata.product_id === action.data.product_id);\r\n\r\n          //   if (item) {\r\n          //     item.quantity += 1;\r\n          //   } else {\r\n          //     state.push(action.data);\r\n          //   }\r\n          }\r\n        });\r\n        // let updatedCart = state.map((curElem) => {\r\n\r\n        //   console.log(curElem);\r\n        //   if (curElem.cardData.product_id === action.data.product_id) {\r\n        //     console.log('matched');\r\n        //     return {\r\n        //       ...curElem, quantity: curElem.quantity + 1\r\n        //     };\r\n        //   }\r\n\r\n        //   return curElem;\r\n        // });\r\n\r\n        // const item = state.find((curElem) => curElem.product_id === action.product_id);\r\n\r\n        // if (item) {\r\n        //   item.quantity += 1;\r\n        // } else {\r\n        //   state.push(action.data);\r\n        // }\r\n\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n\r\n\r\n\r\n        // const basket = createSlice({\r\n        //   name: \"basket\",\r\n        //   initialState,\r\n        //   reducers: {\r\n        //     addToBasket: (state, { payload }) => {\r\n        //       const item = state.items.find((pizza) => pizza.name === payload.name);\r\n\r\n        //       if (item) {\r\n        //         item.quantity += payload.quantity;\r\n        //       } else {\r\n        //         state.items.push(payload);\r\n        //       }\r\n        //     },\r\n        //   },\r\n        // });\r\n      } else {\r\n        return [\r\n          ...state,\r\n          { cardData: action.data }\r\n        ]\r\n      }\r\n\r\n\r\n      //   let updatedCart = state.data.map((curElem) => {\r\n\r\n      //     if (curElem.product_id === action.payload) {\r\n      //         if (curElem.quantity < curElem.max_qty)\r\n      //             return {\r\n      //                 ...curElem, quantity: curElem.quantity + 1\r\n      //             };\r\n      //     }\r\n      //     return curElem;\r\n      // });\r\n      break;\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}